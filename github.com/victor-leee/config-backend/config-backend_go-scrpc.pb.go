// Code generated by protoc-gen-go-scrpc. DO NOT EDIT.
// Path internal/proto/config-backend.proto
// This is the server side implementation

package config_backend

import (
	context "context"
	scrpc "github.com/victor-leee/scrpc"
	proto "google.golang.org/protobuf/proto"
)

var server scrpc.Server

func init() {
	server = scrpc.NewServer("config-backend-victor-leee-github-com")
}

func GetServer() scrpc.Server {
	return server
}

type ConfigBackendService interface {
	GetConfig(ctx context.Context, req *GetConfigRequest) (*GetConfigResponse, error)
	PutConfig(ctx context.Context, req *PutConfigRequest) (*PutConfigResponse, error)
}

func RegisterConfigBackendService(handler ConfigBackendService) {
	server.RegisterHandler("GetConfig", func(b []byte) (proto.Message, error) {
		req := &GetConfigRequest{}
		if unmarshalErr := proto.Unmarshal(b, req); unmarshalErr != nil {
			return nil, unmarshalErr
		}
		return handler.GetConfig(context.Background(), req)
	})
	server.RegisterHandler("PutConfig", func(b []byte) (proto.Message, error) {
		req := &PutConfigRequest{}
		if unmarshalErr := proto.Unmarshal(b, req); unmarshalErr != nil {
			return nil, unmarshalErr
		}
		return handler.PutConfig(context.Background(), req)
	})
}
